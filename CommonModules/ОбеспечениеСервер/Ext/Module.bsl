
#Область ПрограммныйИнтерфейс

// Предназначена для разбиения таблицы значений на несколько таблиц по комбинациям значений в ключевых полях таблицы.
//
// Параметры:
//   Таблица            - ТаблицаЗначений      - таблица, которую необходимо разбить на несколько таблиц.
//   ПоляКлюча          - Строка               - имена колонок таблицы, образующие ключ строки таблицы.
//   ПоляКлючаУдаляемые - Строка, Неопределено - имена колонок из состава ключа, которые необходимо удалить
//                                               из полученных в результате разбиения таблиц.
// Возвращаемое значение:
//  Массив из Структура:
//    * Ключ    - Структура       - структура, с полями, имена которых переданы в параметре "ПоляКлюча".
//                                  Содержит комбинацию значений полей, таблицы переданной параметром "Таблица".
//    * Таблица - ТаблицаЗначений - таблица, с полями совпадающими с полями таблицы переданной в параметре "Таблица",
//                                  не содержит полей, имена которых переданы в параметре "ПоляКлючаУдаляемые".
//                                  Содержит копию строк таблицы переданной параметром "Таблица", отобранных по
//                                  значениям полей, перечисленным в структуре "Ключ".
//
Функция РазбитьТаблицуПоЗначениюКлюча(Таблица, ПоляКлюча, ПоляКлючаУдаляемые = Неопределено) Экспорт

	Ключ = Новый Структура(ПоляКлюча);
	ПоляДляУдаления = Новый Структура(?(ПоляКлючаУдаляемые = Неопределено, ПоляКлюча, ПоляКлючаУдаляемые));

	ТаблицаБезКлюча = Таблица.СкопироватьКолонки();
	Для Каждого Свойство Из ПоляДляУдаления Цикл
		ТаблицаБезКлюча.Колонки.Удалить(Свойство.Ключ);
	КонецЦикла;

	МассивТаблиц = Новый Массив();

	Для Счетчик = 0 По Таблица.Количество() - 1 Цикл

		ДанныеЗаполнения = Таблица[Счетчик];
		Если ИзменилсяКлюч(Ключ, ДанныеЗаполнения) Тогда

			Ключ = Новый Структура(ПоляКлюча);
			ТаблицаБезКлюча = ТаблицаБезКлюча.СкопироватьКолонки();
			МассивТаблиц.Добавить(Новый Структура("Ключ, Таблица", Ключ, ТаблицаБезКлюча));
			ЗаполнитьЗначенияСвойств(Ключ, ДанныеЗаполнения);

		КонецЕсли;

		НоваяСтрока = ТаблицаБезКлюча.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЗаполнения);

	КонецЦикла;

	Возврат МассивТаблиц;

КонецФункции

// Проверяет ключ на изменение.
//
// Параметры:
//   Ключ              - Структура                                                     - содержит ранее установленные
//                                                                                       значения ключа.
//   ПроверяемаяСтрока - ДанныеФормыЭлементКоллекции, СтрокаТаблицыЗначений, Структура - данные содержащие текущие
//                                                                                       значения ключа.
// 
// Возвращаемое значение:
//   Булево - признак, что ключ изменился.
//
Функция ИзменилсяКлюч(Ключ, ПроверяемаяСтрока) Экспорт
	
	Для Каждого Свойство Из Ключ Цикл
	
		Если ПроверяемаяСтрока[Свойство.Ключ] <> Свойство.Значение Тогда
			Возврат Истина;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции

#КонецОбласти
