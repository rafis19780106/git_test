
#Область ПрограммныйИнтерфейс

Процедура ПроверитьКорректностьЗаполненияДокумента(ДокументОбъект, Отказ = Ложь) Экспорт
	
	// Заполним массив необходимых проверок в зависимости от типа документа
	МассивПроверок = Новый Массив();
	ИмяТаблицы     = ДокументОбъект.Метаданные().ПолноеИмя();
	
	Если ИмяТаблицы = "Документ.РеализацияТоваровИУслуг" Тогда
		
		МассивПроверок.Добавить("ТаблицаТовары");
		МассивПроверок.Добавить("КорректностьЗаполненияСкладов");
		МассивПроверок.Добавить("ДублиТоваров");
		
	ИначеЕсли ИмяТаблицы = "Документ.ПриобретениеТоваровИУслуг" Тогда
		
		МассивПроверок.Добавить("ТаблицаТовары");
		МассивПроверок.Добавить("КорректностьЗаполненияСкладов");
		
	КонецЕсли;
	
	// Сформируем текст запроса необходимых проверок в соответствие с массивом проверок
	ТекстЗапроса     = "";
	ПараметрыЗапроса = Новый Структура;
	
	ПараметрыЗапроса.Вставить("Дата",   ДокументОбъект.Дата);
	ПараметрыЗапроса.Вставить("Ссылка", ДокументОбъект.Ссылка);
	
	Для Каждого ИмяПроверки Из МассивПроверок Цикл
		
		Если ИмяПроверки = "ТаблицаТовары" Тогда
			
			СформироватьЗапросТаблицаТовары(ТекстЗапроса, ПараметрыЗапроса, ДокументОбъект, ИмяТаблицы);
			
		ИначеЕсли ИмяПроверки = "КорректностьЗаполненияСкладов" Тогда
			
			СформироватьЗапросКорректностьЗаполненияСкладов(ТекстЗапроса);
			
		ИначеЕсли ИмяПроверки = "ДублиТоваров" Тогда
			
			СформироватьЗапросДублиТоваров(ТекстЗапроса);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
	КонецЦикла;
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	// Сообщим пользователю о результатах проверки для каждого результата запроса
	Для ИндексПроверки = 0 По РезультатПакета.Количество()-1 Цикл
		
		Выборка = РезультатПакета[ИндексПроверки].Выбрать();
		ИмяПроверки = МассивПроверок[ИндексПроверки];
		
		Если ИмяПроверки = "КорректностьЗаполненияСкладов" Тогда
			
			СообщитьОбОшибкахКорректностьЗаполненияСкладов(Выборка, ДокументОбъект, Отказ);
			
		ИначеЕсли ИмяПроверки = "ДублиТоваров" Тогда
			
			СообщитьОбОшибкахДублиТоваров(Выборка, ДокументОбъект, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыФормированияЗапросовПроверкиКорректностиЗаполненияДокументов

Процедура СформироватьЗапросТаблицаТовары(ТекстЗапроса, ПараметрыЗапроса, ДокументОбъект, ИмяТаблицы)
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительЗапросовВПакете();
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары";
	
	ПараметрыЗапроса.Вставить("Товары", ДокументОбъект.Товары.Выгрузить(, "НомерСтроки, Склад, Номенклатура"));
	
КонецПроцедуры

Процедура СформироватьЗапросКорректностьЗаполненияСкладов(ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительЗапросовВПакете() + 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И Товары.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)";
	
КонецПроцедуры

Процедура СформироватьЗапросДублиТоваров(ТекстЗапроса)
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительЗапросовВПакете() + 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура) КАК НоменклатураПредставление,
	|	Товары.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(Товары.Склад) КАК СкладПредставление
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(*) > 1";
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыДляВыводаСообщенийОбОшибкахЗаполненияДокументов

Процедура СообщитьОбОшибкахКорректностьЗаполненияСкладов(Выборка, ДокументОбъект, Отказ)
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = СтрШаблон("Не заполнена колонка ""Склад"" в строке %1 списка ""Товары""",
			Выборка.НомерСтроки);
		
		ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Склад"),,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахДублиТоваров(Выборка, ДокументОбъект, Отказ)
	
	Пока Выборка.Следующий() Цикл
		
		
		Если ЗначениеЗаполнено(Выборка.Склад) Тогда
			ТекстОшибки = СтрШаблон("Номенклатура ""%1"" со складом ""%2"" повторяется",
				Выборка.НоменклатураПредставление,
				Выборка.СкладПредставление);
		Иначе
			ТекстОшибки = СтрШаблон("Номенклатура ""%1"" повторяется",
				Выборка.НоменклатураПредставление);
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ДокументОбъект,
		ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
		,
		Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти